<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>